# Configuration template for OpenBEL API

# BEL configuration.
bel:
  # The BEL version supported by this OpenBEL API instance.
  # Allowed values:
  #   1.0
  #     (BEL version 1.0 specification)
  #   2.0
  #     (BEL version 2.0 specification)
  version: 1.0

# Storage of nanopubs through the Mongo database.
nanopub_store:
  mongo:

    # The MongoDB host to connect to. For example if MongoDB's net.bindIp
    # setting is configured as 127.0.0.1 we should be able to connect using
    # 'localhost'.  We use 'mongodb' for use with docker-compose.
    host:                     'mongodb'

    # The default MongoDB port. Configured under MongoDB's `net.port` setting.
    port:                     27017

    # The name of your database. We think "openbel-nanopubs" should be fine,
    # but it's up to you.
    database:                 'openbel-nanopubs'

    # MongoDB authentication and role assignment. These settings are necessary
    # if you would like to have a MongoDB user authenticated and authorized to
    # use the configure database.

    #First, you will need to create a MongoDB user with the "readWrite" and
    #"dbAdmin" roles for the "database" value set above. This is to allow read,
    #write, and index creation in the OpenBEL API application.
    #See https://github.com/OpenBEL/openbel-api/wiki/Configuring-the-Nanopub-Store#adding-the-openbel-user
    #username:                'openbel-user'

    #Second, you will need to set a password for the MongoDB user set above.
    #MongoDB passwords are hashed using SCRAM-SHA-1 on the client and server.
    #This is the default hashing strategy on MongoDB 3.0 and after.
    #See https://docs.mongodb.org/v3.0/core/security-scram-sha-1/
    #password:                'changeme'

    # If your MongoDB users are managed in a separate Mongo database then you
    # will need to set it here. This can be useful if you are managing users in
    # a separate Mongo database from the application's database.
    # Optional; defaults to the "database" set above.
    #authentication_database: 'openbel'

# RDF dataset for BEL datasets, annotations, and namespaces using Apache Jena.
resource_rdf:
  jena:
    tdb_directory: 'biological-concepts-rdf'

# Full-text search over annotation and namespace values using SQLite.
resource_search:
  sqlite:
    database_file: 'biological-concepts-rdf.db'

# Set a secret used during session creation....
session_secret: 'changeme'

# User authentication via JWTs; see http://jwt.io/introduction/ for more
auth:
  # Controls whether the API requires authentication
  enabled: false
  # Used by the auth middleware to decode and verify the JWT
  #secret:   'JWT secret here'

