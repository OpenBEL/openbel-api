#%RAML 0.8
title: OpenBEL API
version: 0.0.2
baseUri: 'http://localhost/api'
mediaType: ''
protocols:
  - HTTP
documentation:
  - title: OpenBEL API
    content: |
      The primary goal of the OpenBEL API is to expose OpenBEL Platform capabilities over the web to lower the technical barriers for users.
  - title: Planned Functionality
    content: |
      We are currently working on the following:
      - Creating a group of BEL Nanopubs with returned resource "Location"
      - Support for [BEL version 2.0](http://wiki.openbel.org/display/BLVD)
      - Autocomplete with BEL expression semantics (e.g. namespace encoding, term signatures, etc.)
      - Creation of BEL knowledge networks from the BEL Nanopubs collection
  - title: Functionality
    content: |
      The API provides the following:
      - Access and Search for BEL Annotations and Namespaces
      - Equivalence and Orthologize BEL expressions
      - Autocomplete syntax of BEL expressions
      - Access BEL Functions and Relationships
      - Store, query, and export BEL
  - title: Welcome
    content: |-
      The primary goal of the OpenBEL API is to expose OpenBEL Platform capabilities over the web to lower the technical barriers for users.

      NOTE - this API documentation is managed/updated on stoplight.io (Public view at http://openbelapi.api-docs.io)
/api:
  displayName: api
  description: ''
  /namespaces:
    displayName: namespaces
    description: ''
    '/{namespace}':
      displayName: '{namespace}'
      description: ''
      /values:
        displayName: values
        description: ''
        '/{value}':
          displayName: '{value}'
          description: ''
          /equivalents:
            displayName: equivalents
            description: ''
            uriParameters: {}
            options:
              displayName: OPTIONS_namespaces-namespace-values-value-equivalents
              description: Returns allowable HTTP methods.
              headers: {}
              responses: {}
              queryParameters: {}
            get:
              displayName: GET_namespaces-namespace-values-value-equivalents
              headers: {}
              responses: {}
              queryParameters: {}
            '/{target}':
              displayName: '{target}'
              description: ''
              uriParameters:
                target:
                  description: target
                  type: string
                  displayName: target
              get:
                displayName: GET_namespaces-namespace-values-value-equivalents-target
                headers: {}
                responses: {}
                queryParameters: {}
              options:
                displayName: OPTIONS_namespaces-namespace-values-value-equivalents-target
                description: Returns allowable HTTP methods.
                headers: {}
                responses: {}
                queryParameters: {}
          uriParameters:
            value:
              description: value
              type: string
              displayName: value
          get:
            displayName: GET_namespaces-namespace-values-value
            headers: {}
            responses: {}
            queryParameters: {}
          options:
            displayName: OPTIONS_namespaces-namespace-values-value
            description: Returns allowable HTTP methods.
            headers: {}
            responses: {}
            queryParameters: {}
          /orthologs:
            displayName: orthologs
            description: ''
            '/{target}':
              displayName: '{target}'
              description: ''
              uriParameters:
                target:
                  description: target
                  type: string
                  displayName: target
              options:
                displayName: OPTIONS_namespaces-namespace-values-value-orthologs-target
                description: Returns allowable HTTP methods.
                headers: {}
                responses: {}
                queryParameters: {}
              get:
                displayName: GET_namespaces-namespace-values-value-orthologs-target
                headers: {}
                responses: {}
                queryParameters: {}
            uriParameters: {}
            get:
              displayName: GET_namespaces-namespace-values-value-orthologs
              headers: {}
              responses: {}
              queryParameters: {}
            options:
              displayName: OPTIONS_namespaces-namespace-values-value-orthologs
              description: Returns allowable HTTP methods.
              headers: {}
              responses: {}
              queryParameters: {}
        uriParameters: {}
        options:
          displayName: OPTIONS_namespaces-namespace-values
          description: |
            Returns allowable HTTP methods for this namespace_value_collection.
          headers: {}
          responses: {}
          queryParameters: {}
        get:
          displayName: GET_namespaces-namespace-values
          description: |
            Returns the *namespace_value_collection* across the *namespace* resource identified by *{namespace}* URI parameter.

            <br>
            **Limitations**

            This endpoint is limited to full-text searching including a *filter* like:
            ```json
            {
                "category": "fts",
                "name":     "search",
                "value":    "factor VIII"
            }
            ```

            <br>
            **Nested Namespace**

            All returned *namespace_value* in the *namespace_value_collection* will include the *namespace* it is found in.
            For example if *factor VIII* is found in the *Hgnc Human Genes* namespace then the following will be included in the value:

            ```json
            "namespace": {
              "rdf_uri": "http://www.openbel.org/bel/namespace/hgnc-human-genes",
              "name": "Hgnc Human Genes",
              "prefix": "hgnc",
              "domain": "gene and gene product"
            },
            ```

            <br>
            **Additional Property**

            A `match_text` property, included in each *namespace_value*, provides the snippet of text that matched the search. The matched term will be prefixed with `<<` and suffixed with `>>`.

            <br>
            **Complete Example**

            **<sub>GET http://localhost/api/namespaces/hgnc/values?filter={%22category%22:%22fts%22,%22name%22:%22search%22,%22value%22:%22factor%20VIII%22}&start=0&size=2</sub>**

            ```json
            {
              "namespace_value_collection": [
                {
                  "namespace_value": {
                    "type": "ProteinConcept",
                    "identifier": "3546",
                    "name": "F8",
                    "title": "coagulation factor VIII, procoagulant component",
                    "species": "9606",
                    "namespace": {
                      "rdf_uri": "http://www.openbel.org/bel/namespace/hgnc-human-genes",
                      "name": "Hgnc Human Genes",
                      "prefix": "hgnc",
                      "domain": "gene and gene product"
                    },
                    "match_text": "coagulation <<factor>> VIII, procoagulant component...C 8C F8C I II III <<VIII>> FVIII"
                  },
                  "_links": {
                    "self": {
                      "type": "namespace_value",
                      "href": "http://localhost:9000/api/namespaces/hgnc-human-genes/3546"
                    },
                    "collection": {
                      "type": "namespace",
                      "href": "http://localhost:9000/api/namespaces/hgnc-human-genes"
                    },
                    "item": [
                      {
                        "type": "namespace_value_collection",
                        "href": "http://localhost:9000/api/namespaces/hgnc-human-genes/3546/equivalents"
                      },
                      {
                        "type": "namespace_value_collection",
                        "href": "http://localhost:9000/api/namespaces/hgnc-human-genes/3546/orthologs"
                      }
                    ]
                  }
                },
                {
                  "namespace_value": {
                    "type": "ProteinConcept",
                    "identifier": "6631",
                    "name": "LMAN1",
                    "title": "lectin, mannose-binding, 1",
                    "species": "9606",
                    "namespace": {
                      "rdf_uri": "http://www.openbel.org/bel/namespace/hgnc-human-genes",
                      "name": "Hgnc Human Genes",
                      "prefix": "hgnc",
                      "domain": "gene and gene product"
                    },
                    "match_text": "F5F8D ERGIC53 MCFD1 MR60 gp58 ERGIC-53 FMFD1 coagulation <<factor>> V-factor <<VIII>> combined deficiency"
                  },
                  "_links": {
                    "self": {
                      "type": "namespace_value",
                      "href": "http://localhost:9000/api/namespaces/hgnc-human-genes/6631"
                    },
                    "collection": {
                      "type": "namespace",
                      "href": "http://localhost:9000/api/namespaces/hgnc-human-genes"
                    },
                    "item": [
                      {
                        "type": "namespace_value_collection",
                        "href": "http://localhost:9000/api/namespaces/hgnc-human-genes/6631/equivalents"
                      },
                      {
                        "type": "namespace_value_collection",
                        "href": "http://localhost:9000/api/namespaces/hgnc-human-genes/6631/orthologs"
                      }
                    ]
                  }
                }
              ]
            }
            ```
          headers: {}
          responses:
            '200':
              body:
                application/json:
                  schema: '{}'
                  example: |-
                    {
                        "namespace_value_collection": [
                            {
                                "namespace_value": {
                                    "type": "ProteinConcept",
                                    "identifier": "3546",
                                    "name": "F8",
                                    "title": "coagulation factor VIII, procoagulant component",
                                    "species": "9606",
                                    "match_text": "coagulation <<factor>> VIII, procoagulant component...C 8C F8C I II III <<VIII>> FVIII"
                                },
                                "_links": {
                                    "self": {
                                        "type": "namespace_value",
                                        "href": "http://localhost/api/namespaces/hgnc-human-genes/3546"
                                    },
                                    "collection": {
                                        "type": "namespace",
                                        "href": "http://localhost/api/namespaces/hgnc-human-genes"
                                    },
                                    "item": [
                                        {
                                            "type": "namespace_value_collection",
                                            "href": "http://localhost/api/namespaces/hgnc-human-genes/3546/equivalents"
                                        },
                                        {
                                            "type": "namespace_value_collection",
                                            "href": "http://localhost/api/namespaces/hgnc-human-genes/3546/orthologs"
                                        }
                                    ]
                                }
                            },
                            {
                                "namespace_value": {
                                    "type": "ProteinConcept",
                                    "identifier": "6631",
                                    "name": "LMAN1",
                                    "title": "lectin, mannose-binding, 1",
                                    "species": "9606",
                                    "match_text": "F5F8D ERGIC53 MCFD1 MR60 gp58 ERGIC-53 FMFD1 coagulation <<factor>> V-factor <<VIII>> combined deficiency"
                                },
                                "_links": {
                                    "self": {
                                        "type": "namespace_value",
                                        "href": "http://localhost/api/namespaces/hgnc-human-genes/6631"
                                    },
                                    "collection": {
                                        "type": "namespace",
                                        "href": "http://localhost/api/namespaces/hgnc-human-genes"
                                    },
                                    "item": [
                                        {
                                            "type": "namespace_value_collection",
                                            "href": "http://localhost/api/namespaces/hgnc-human-genes/6631/equivalents"
                                        },
                                        {
                                            "type": "namespace_value_collection",
                                            "href": "http://localhost/api/namespaces/hgnc-human-genes/6631/orthologs"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
              description: |
                [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)

                **JSON Schema**
                - [namespace_value_collection](schemas/namespace_value_collection.schema.json)
                - [namespace_value](schemas/namespace_value_resource.schema.json)
          queryParameters:
            start:
              type: integer
              description: |
                The namespace value resource to start from for paging purposes.
              displayName: start
            size:
              type: integer
              description: |
                The size of the namespace value resource collection to retrieve. This will return a slice of the namespace value resource collection relative to *start*.

                A size of zero or less will return all values.
              displayName: size
            filter:
              type: string
              description: |
                A filter to apply to the namespace value resource collection to narrow the resources retrieved.
              displayName: filter
            faceted:
              type: string
              description: |
                The boolean indicator to provided faceted results for the namespace value resource collection. The default is to not facet.
              enum:
                - 'true'
                - 'yes'
                - '1'
                - 'on'
              displayName: faceted
      uriParameters:
        namespace:
          description: namespace
          type: string
          displayName: namespace
      get:
        displayName: GET_namespaces-namespace
        headers: {}
        responses: {}
        queryParameters: {}
      options:
        displayName: OPTIONS_namespaces-namespace
        description: Returns allowable HTTP methods.
        headers: {}
        responses: {}
        queryParameters: {}
    /values:
      displayName: values
      description: ''
      uriParameters: {}
      options:
        displayName: OPTIONS_namespaces-values
        description: |
          Returns allowable HTTP methods for this namespace_value_collection.
        headers: {}
        responses: {}
        queryParameters: {}
      get:
        displayName: GET_namespaces-values
        description: |
          Returns the *namespace_value_collection* across all *namespace* resources.

          <br>
          **Limitations**

          This endpoint is limited to full-text searching including a *filter* like:
          ```json
          {
              "category": "fts",
              "name":     "search",
              "value":    "factor VIII"
          }
          ```

          <br>
          **Nested Namespace**

          All returned *namespace_value* in the *namespace_value_collection* will include the *namespace* it is found in.
          For example if *factor VIII* is found in the *Hgnc Human Genes* namespace then the following will be included in the value:

          ```json
          "namespace": {
            "rdf_uri": "http://www.openbel.org/bel/namespace/hgnc-human-genes",
            "name": "Hgnc Human Genes",
            "prefix": "hgnc",
            "domain": "gene and gene product"
          },
          ```

          <br>
          **Additional Property**

          A `match_text` property, included in each *namespace_value*, provides the snippet of text that matched the search. The matched term will be prefixed with `<<` and suffixed with `>>`.

          <br>
          **Complete Example**

          **<sub>GET http://localhost/api/namespaces/values?filter={%22category%22:%22fts%22,%22name%22:%22search%22,%22value%22:%22factor%20VIII%22}&start=0&size=3</sub>**

          ```json
          {
            "namespace_value_collection": [
              {
                "namespace_value": {
                  "type": "ProteinConcept",
                  "identifier": "88383",
                  "name": "F8",
                  "title": "coagulation factor VIII",
                  "species": "10090",
                  "namespace": {
                    "rdf_uri": "http://www.openbel.org/bel/namespace/mgi-mouse-genes",
                    "name": "Mgi Mouse Genes",
                    "prefix": "mgi",
                    "domain": "gene and gene product"
                  },
                  "match_text": "...or tor ctor actor <<factor>> I II III <<VIII>> FVIII <<Factor>> -8 f-8 Cf-8 f8..."
                },
                "_links": {
                  "self": {
                    "type": "namespace_value",
                    "href": "http://localhost:9000/api/namespaces/mgi-mouse-genes/88383"
                  },
                  "collection": {
                    "type": "namespace",
                    "href": "http://localhost:9000/api/namespaces/mgi-mouse-genes"
                  },
                  "item": [
                    {
                      "type": "namespace_value_collection",
                      "href": "http://localhost:9000/api/namespaces/mgi-mouse-genes/88383/equivalents"
                    },
                    {
                      "type": "namespace_value_collection",
                      "href": "http://localhost:9000/api/namespaces/mgi-mouse-genes/88383/orthologs"
                    }
                  ]
                }
              },
              {
                "namespace_value": {
                  "type": "ProteinConcept",
                  "identifier": "727845",
                  "name": "F8",
                  "title": "coagulation factor VIII, procoagulant component",
                  "species": "10116",
                  "namespace": {
                    "rdf_uri": "http://www.openbel.org/bel/namespace/rgd-rat-genes",
                    "name": "Rgd Rat Genes",
                    "prefix": "rgd",
                    "domain": "gene and gene product"
                  },
                  "match_text": "coagulation <<factor>> <<VIII>>"
                },
                "_links": {
                  "self": {
                    "type": "namespace_value",
                    "href": "http://localhost:9000/api/namespaces/rgd-rat-genes/727845"
                  },
                  "collection": {
                    "type": "namespace",
                    "href": "http://localhost:9000/api/namespaces/rgd-rat-genes"
                  },
                  "item": [
                    {
                      "type": "namespace_value_collection",
                      "href": "http://localhost:9000/api/namespaces/rgd-rat-genes/727845/equivalents"
                    },
                    {
                      "type": "namespace_value_collection",
                      "href": "http://localhost:9000/api/namespaces/rgd-rat-genes/727845/orthologs"
                    }
                  ]
                }
              },
              {
                "namespace_value": {
                  "type": "ProteinConcept",
                  "identifier": "3546",
                  "name": "F8",
                  "title": "coagulation factor VIII, procoagulant component",
                  "species": "9606",
                  "namespace": {
                    "rdf_uri": "http://www.openbel.org/bel/namespace/hgnc-human-genes",
                    "name": "Hgnc Human Genes",
                    "prefix": "hgnc",
                    "domain": "gene and gene product"
                  },
                  "match_text": "coagulation <<factor>> VIII, procoagulant component...C 8C F8C I II III <<VIII>> FVIII"
                },
                "_links": {
                  "self": {
                    "type": "namespace_value",
                    "href": "http://localhost:9000/api/namespaces/hgnc-human-genes/3546"
                  },
                  "collection": {
                    "type": "namespace",
                    "href": "http://localhost:9000/api/namespaces/hgnc-human-genes"
                  },
                  "item": [
                    {
                      "type": "namespace_value_collection",
                      "href": "http://localhost:9000/api/namespaces/hgnc-human-genes/3546/equivalents"
                    },
                    {
                      "type": "namespace_value_collection",
                      "href": "http://localhost:9000/api/namespaces/hgnc-human-genes/3546/orthologs"
                    }
                  ]
                }
              }
            ]
          }
          ```
        headers: {}
        responses:
          '200':
            body:
              application/json:
                schema: '{}'
                example: |-
                  {
                      "namespace_value_collection": [
                          {
                              "namespace_value": {
                                  "type": "ProteinConcept",
                                  "identifier": "88383",
                                  "name": "F8",
                                  "title": "coagulation factor VIII",
                                  "species": "10090",
                                  "match_text": "...or tor ctor actor <<factor>> I II III <<VIII>> FVIII <<Factor>> -8 f-8 Cf-8 f8..."
                              },
                              "_links": {
                                  "self": {
                                      "type": "namespace_value",
                                      "href": "http://localhost/api/namespaces/mgi-mouse-genes/88383"
                                  },
                                  "collection": {
                                      "type": "namespace",
                                      "href": "http://localhost/api/namespaces/mgi-mouse-genes"
                                  },
                                  "item": [
                                      {
                                          "type": "namespace_value_collection",
                                          "href": "http://localhost/api/namespaces/mgi-mouse-genes/88383/equivalents"
                                      },
                                      {
                                          "type": "namespace_value_collection",
                                          "href": "http://localhost/api/namespaces/mgi-mouse-genes/88383/orthologs"
                                      }
                                  ]
                              }
                          },
                          {
                              "namespace_value": {
                                  "type": "ProteinConcept",
                                  "identifier": "727845",
                                  "name": "F8",
                                  "title": "coagulation factor VIII, procoagulant component",
                                  "species": "10116",
                                  "match_text": "coagulation <<factor>> <<VIII>>"
                              },
                              "_links": {
                                  "self": {
                                      "type": "namespace_value",
                                      "href": "http://localhost/api/namespaces/rgd-rat-genes/727845"
                                  },
                                  "collection": {
                                      "type": "namespace",
                                      "href": "http://localhost/api/namespaces/rgd-rat-genes"
                                  },
                                  "item": [
                                      {
                                          "type": "namespace_value_collection",
                                          "href": "http://localhost/api/namespaces/rgd-rat-genes/727845/equivalents"
                                      },
                                      {
                                          "type": "namespace_value_collection",
                                          "href": "http://localhost/api/namespaces/rgd-rat-genes/727845/orthologs"
                                      }
                                  ]
                              }
                          },
                          {
                              "namespace_value": {
                                  "type": "ProteinConcept",
                                  "identifier": "3546",
                                  "name": "F8",
                                  "title": "coagulation factor VIII, procoagulant component",
                                  "species": "9606",
                                  "match_text": "coagulation <<factor>> VIII, procoagulant component...C 8C F8C I II III <<VIII>> FVIII"
                              },
                              "_links": {
                                  "self": {
                                      "type": "namespace_value",
                                      "href": "http://localhost/api/namespaces/hgnc-human-genes/3546"
                                  },
                                  "collection": {
                                      "type": "namespace",
                                      "href": "http://localhost/api/namespaces/hgnc-human-genes"
                                  },
                                  "item": [
                                      {
                                          "type": "namespace_value_collection",
                                          "href": "http://localhost/api/namespaces/hgnc-human-genes/3546/equivalents"
                                      },
                                      {
                                          "type": "namespace_value_collection",
                                          "href": "http://localhost/api/namespaces/hgnc-human-genes/3546/orthologs"
                                      }
                                  ]
                              }
                          }
                      ]
                  }
            description: |
              [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)

              **JSON Schema**
              - [namespace_value_collection](schemas/namespace_value_collection.schema.json)
              - [namespace_value](schemas/namespace_value_resource.schema.json)
        queryParameters:
          start:
            type: integer
            description: |
              The namespace value resource to start from for paging purposes.
            displayName: start
          size:
            type: integer
            description: |
              The size of the namespace value resource collection to retrieve. This will return a slice of the namespace value resource collection relative to *start*.

              A size of zero or less will return all values.
            displayName: size
          filter:
            type: string
            description: |
              A filter to apply to the namespace value resource collection to narrow the resources retrieved.
            displayName: filter
          faceted:
            type: string
            description: |
              The boolean indicator to provided faceted results for the namespace value resource collection. The default is to not facet.
            enum:
              - 'true'
              - 'yes'
              - '1'
              - 'on'
            displayName: faceted
    uriParameters: {}
    get:
      displayName: GET_namespaces
      headers: {}
      responses: {}
      queryParameters: {}
    options:
      displayName: OPTIONS_namespaces
      description: Returns allowable HTTP methods.
      headers: {}
      responses: {}
      queryParameters: {}
  /language:
    displayName: language
    description: ''
    /functions:
      displayName: functions
      description: ''
      '/{fx}':
        displayName: '{fx}'
        description: ''
        uriParameters:
          fx:
            description: fx
            type: string
            displayName: fx
        get:
          displayName: GET_language-functions-fx
          headers:
            Accept:
              type: string
              displayName: Accept
          responses: {}
          queryParameters: {}
        options:
          displayName: OPTIONS_language-functions-fx
          description: Returns allowable HTTP methods.
          headers: {}
          responses: {}
          queryParameters: {}
      uriParameters: {}
      get:
        displayName: GET_language-functions
        headers:
          Accept:
            type: string
            displayName: Accept
        responses: {}
        queryParameters: {}
      options:
        displayName: OPTIONS_language-functions
        description: Returns allowable HTTP methods.
        headers: {}
        responses: {}
        queryParameters: {}
    uriParameters: {}
    options:
      displayName: OPTIONS_language
      description: |
        Returns allowable HTTP methods for this root resource.
      headers: {}
      responses: {}
      queryParameters: {}
    get:
      displayName: GET_language
      description: |
        Returns a list of linked *item* resources.
      headers: {}
      responses:
        '200':
          body:
            application/hal+json:
              schema: '{}'
              example: |-
                {
                    "_links": {
                        "item": [
                            {
                                "type": "function_collection",
                                "href": "http://localhost/api/language/functions"
                            },
                            {
                                "type": "relation_collection",
                                "href": "http://localhost/api/language/relations"
                            },
                            {
                                "type": "version_collection",
                                "href": "http://localhost/api/language/version"
                            }
                        ]
                    }
                }
          description: |
            [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)
      queryParameters: {}
    /relations:
      displayName: relations
      description: ''
      uriParameters: {}
      options:
        displayName: OPTIONS_language-relations
        description: Returns allowable HTTP methods.
        headers: {}
        responses:
          '200':
            body:
              application/json:
                schema: |-
                  {
                      "type": "object",
                      "properties": {
                          "relationship_collection": {
                              "type": "array",
                              "items": {
                                  "type": "object",
                                  "properties": {
                                      "relation": {
                                          "type": "object",
                                          "properties": {
                                              "short_form": {
                                                  "type": "string"
                                              },
                                              "long_form": {
                                                  "type": "string"
                                              },
                                              "description": {
                                                  "type": "string"
                                              }
                                          }
                                      },
                                      "_links": {
                                          "type": "object",
                                          "properties": {
                                              "self": {
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "type": "string"
                                                      },
                                                      "href": {
                                                          "type": "string"
                                                      }
                                                  }
                                              },
                                              "collection": {
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "type": "string"
                                                      },
                                                      "href": {
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          }
                                      }
                                  }
                              }
                          },
                          "_links": {
                              "type": "object",
                              "properties": {
                                  "self": {
                                      "type": "object",
                                      "properties": {
                                          "type": {
                                              "type": "string"
                                          },
                                          "href": {
                                              "type": "string"
                                          }
                                      }
                                  }
                              }
                          }
                      }
                  }
                example: |-
                  {
                      "relationship_collection": [
                          {
                              "relation": {
                                  "short_form": "actsIn",
                                  "long_form": "actsIn",
                                  "description": " +A actsIn f(A)+ -  This relationship links an\n          bundance term to the activity term for the same\n          bundance. This relationship is direct because\n          t is a _self_ relationship, the abundance acts\n          n its own activity. For protein abundance p(A)\n          nd its molecular activity kin(p(A), +p(A) actsIn\n          in(p(A))+. This relationship is introduced by the\n          EL Compiler and may not be used by statements in\n          EL documents."
                              },
                              "_links": {
                                  "self": {
                                      "type": "relationship",
                                      "href": "http://openbel.dev/api/relationships/actsIn"
                                  },
                                  "collection": {
                                      "type": "relationship_collection",
                                      "href": "http://openbel.dev/api/relationships"
                                  }
                              }
                          }
                      ],
                      "_links": {
                          "self": {
                              "type": "relationship_collection",
                              "href": "http://openbel.dev/api/relationships"
                          }
                      }
                  }
        queryParameters: {}
      get:
        displayName: GET_language-relations
        headers:
          Accept:
            type: string
            displayName: Accept
        responses:
          '200':
            body:
              application/json:
                schema: |-
                  {
                      "type": "object",
                      "properties": {
                          "relationship_collection": {
                              "type": "array",
                              "items": {
                                  "type": "object",
                                  "properties": {
                                      "relation": {
                                          "type": "object",
                                          "properties": {
                                              "short_form": {
                                                  "type": "string"
                                              },
                                              "long_form": {
                                                  "type": "string"
                                              },
                                              "description": {
                                                  "type": "string"
                                              }
                                          }
                                      },
                                      "_links": {
                                          "type": "object",
                                          "properties": {
                                              "self": {
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "type": "string"
                                                      },
                                                      "href": {
                                                          "type": "string"
                                                      }
                                                  }
                                              },
                                              "collection": {
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "type": "string"
                                                      },
                                                      "href": {
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          }
                                      }
                                  }
                              }
                          },
                          "_links": {
                              "type": "object",
                              "properties": {
                                  "self": {
                                      "type": "object",
                                      "properties": {
                                          "type": {
                                              "type": "string"
                                          },
                                          "href": {
                                              "type": "string"
                                          }
                                      }
                                  }
                              }
                          }
                      }
                  }
                example: |-
                  {
                      "relationship_collection": [
                          {
                              "relation": {
                                  "short_form": "actsIn",
                                  "long_form": "actsIn",
                                  "description": " +A actsIn f(A)+ -  This relationship links an\n          bundance term to the activity term for the same\n          bundance. This relationship is direct because\n          t is a _self_ relationship, the abundance acts\n          n its own activity. For protein abundance p(A)\n          nd its molecular activity kin(p(A), +p(A) actsIn\n          in(p(A))+. This relationship is introduced by the\n          EL Compiler and may not be used by statements in\n          EL documents."
                              },
                              "_links": {
                                  "self": {
                                      "type": "relationship",
                                      "href": "http://openbel.dev/api/relationships/actsIn"
                                  },
                                  "collection": {
                                      "type": "relationship_collection",
                                      "href": "http://openbel.dev/api/relationships"
                                  }
                              }
                          }
                      ],
                      "_links": {
                          "self": {
                              "type": "relationship_collection",
                              "href": "http://openbel.dev/api/relationships"
                          }
                      }
                  }
        queryParameters: {}
  /annotations:
    displayName: annotations
    description: ''
    '/{annotation}':
      displayName: '{annotation}'
      description: ''
      /values:
        displayName: values
        description: ''
        uriParameters: {}
        get:
          displayName: GET_annotations-annotation-values
          description: |
            Returns the *annotation_value_collection* across the *annotation* resource identified by *{annotation}* URI parameter.

            <br>
            **Limitations**

            This endpoint is limited to full-text searching including a *filter* like:
            ```json
            {
                "category": "fts",
                "name":     "search",
                "value":    "sarcoma"
            }
            ```

            <br>
            **Nested Annotation**

            All returned *annotation_value* in the *annotation_value_collection* will include the *annotation* it is found in.
            For example if *sarcoma* is found in the *Disease Ontology* annotation then the following will be included in the value:

            ```json
            annotation": {
              "rdf_uri": "http://www.openbel.org/bel/namespace/disease-ontology",
              "name": "Disease Ontology",
              "prefix": "do",
              "domain": "disease"
            },
            ```

            <br>
            **Additional Property**

            A `match_text` property, included in each *annotation_value*, provides the snippet of text that matched the search. The matched term will be prefixed with `<<` and suffixed with `>>`.

            <br>
            **Complete Example**

            **<sub>GET http://localhost/api/annotations/do/values?filter={%22category%22:%22fts%22,%22name%22:%22search%22,%22value%22:%22sarcoma%22}&start=0&size=3</sub>**

            ```json
            {
              "annotation_value_collection": [
                {
                  "annotation_value": {
                    "type": "BiologicalProcessConcept",
                    "identifier": "1115",
                    "name": "sarcoma",
                    "annotation": {
                      "rdf_uri": "http://www.openbel.org/bel/namespace/disease-ontology",
                      "name": "Disease Ontology",
                      "prefix": "do",
                      "domain": "disease"
                    },
                    "match_text": "<<sarcoma>>",
                    "_links": {
                      "self": {
                        "type": "annotation_value",
                        "href": "http://localhost/api/annotations/disease-ontology/values/1115"
                      },
                      "collection": {
                        "type": "annotation",
                        "href": "http://localhost/api/annotations/disease-ontology"
                      }
                    }
                  }
                },
                {
                  "annotation_value": {
                    "type": "BiologicalProcessConcept",
                    "identifier": "3071",
                    "name": "gliosarcoma",
                    "annotation": {
                      "rdf_uri": "http://www.openbel.org/bel/namespace/disease-ontology",
                      "name": "Disease Ontology",
                      "prefix": "do",
                      "domain": "disease"
                    },
                    "match_text": "...3071 a ma oma coma rcoma arcoma <<sarcoma>> osarcoma iosarcoma liosarcoma gliosarcoma toma stoma astoma...",
                    "_links": {
                      "self": {
                        "type": "annotation_value",
                        "href": "http://localhost/api/annotations/disease-ontology/values/3071"
                      },
                      "collection": {
                        "type": "annotation",
                        "href": "http://localhost/api/annotations/disease-ontology"
                      }
                    }
                  }
                },
                {
                  "annotation_value": {
                    "type": "BiologicalProcessConcept",
                    "identifier": "3382",
                    "name": "liposarcoma",
                    "annotation": {
                      "rdf_uri": "http://www.openbel.org/bel/namespace/disease-ontology",
                      "name": "Disease Ontology",
                      "prefix": "do",
                      "domain": "disease"
                    },
                    "match_text": "2 82 382 3382 a ma oma coma rcoma arcoma <<sarcoma>> osarcoma posarcoma iposarcoma liposarcoma",
                    "_links": {
                      "self": {
                        "type": "annotation_value",
                        "href": "http://localhost/api/annotations/disease-ontology/values/3382"
                      },
                      "collection": {
                        "type": "annotation",
                        "href": "http://localhost/api/annotations/disease-ontology"
                      }
                    }
                  }
                }
              ]
            }
            ```
          headers: {}
          responses:
            '200':
              body:
                application/json:
                  schema: '{}'
                  example: |-
                    {
                        "annotation_value_collection": [
                            {
                                "annotation_value": {
                                    "type": "BiologicalProcessConcept",
                                    "identifier": "1115",
                                    "name": "sarcoma",
                                    "match_text": "&lt;&lt;sarcoma&gt;&gt;",
                                    "_links": {
                                        "self": {
                                            "type": "annotation_value",
                                            "href": "http://localhost/api/annotations/disease-ontology/values/1115"
                                        },
                                        "collection": {
                                            "type": "annotation",
                                            "href": "http://localhost/api/annotations/disease-ontology"
                                        }
                                    }
                                }
                            },
                            {
                                "annotation_value": {
                                    "type": "BiologicalProcessConcept",
                                    "identifier": "3071",
                                    "name": "gliosarcoma",
                                    "match_text": "...3071 a ma oma coma rcoma arcoma &lt;&lt;sarcoma&gt;&gt; osarcoma iosarcoma liosarcoma gliosarcoma toma stoma astoma...",
                                    "_links": {
                                        "self": {
                                            "type": "annotation_value",
                                            "href": "http://localhost/api/annotations/disease-ontology/values/3071"
                                        },
                                        "collection": {
                                            "type": "annotation",
                                            "href": "http://localhost/api/annotations/disease-ontology"
                                        }
                                    }
                                }
                            },
                            {
                                "annotation_value": {
                                    "type": "BiologicalProcessConcept",
                                    "identifier": "3382",
                                    "name": "liposarcoma",
                                    "match_text": "2 82 382 3382 a ma oma coma rcoma arcoma &lt;&lt;sarcoma&gt;&gt; osarcoma posarcoma iposarcoma liposarcoma",
                                    "_links": {
                                        "self": {
                                            "type": "annotation_value",
                                            "href": "http://localhost/api/annotations/disease-ontology/values/3382"
                                        },
                                        "collection": {
                                            "type": "annotation",
                                            "href": "http://localhost/api/annotations/disease-ontology"
                                        }
                                    }
                                }
                            }
                        ]
                    }
              description: |
                [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)

                **JSON Schema**
                - [annotation_value_collection](schemas/annotation_value_collection.schema.json)
                - [annotation_value](schemas/annotation_value_resource.schema.json)
          queryParameters:
            start:
              type: integer
              description: |
                The annotation value resource to start from for paging purposes.
              displayName: start
            size:
              type: integer
              description: |
                The size of the annotation value resource collection to retrieve. This will return a slice of the annotation value resource collection relative to *start*.

                A size of zero or less will return all values.
              displayName: size
            filter:
              type: string
              description: |
                A filter to apply to the annotation value resource collection to narrow the resources retrieved.
              displayName: filter
            faceted:
              type: string
              description: |
                The boolean indicator to provided faceted results for the annotation value resource collection. The default is to not facet.
              enum:
                - 'true'
                - 'yes'
                - '1'
                - 'on'
              displayName: faceted
        '/{value}':
          displayName: '{value}'
          description: ''
          uriParameters:
            value:
              description: value
              type: string
              displayName: value
          get:
            displayName: GET_annotations-annotation-values-value
            description: |
              Returns the *annotation_value* resource identified by *{annotation}* and *{value}* URI parameters.

              <br>
              **Nested Annotation**

              All returned *annotation_value* in the *annotation_value_collection* will include the *annotation* it is found in.
              For example if *sarcoma* is found in the *Disease Ontology* annotation then the following will be included in the value:

              ```json
              annotation": {
                "rdf_uri": "http://www.openbel.org/bel/namespace/disease-ontology",
                "name": "Disease Ontology",
                "prefix": "do",
                "domain": "disease"
              },
              ```

              **Complete Example**

              **<sub>GET http://localhost/api/annotations/do/values/sarcoma</sub>**

              ```json
              {
                "annotation_value": {
                  "type": "BiologicalProcessConcept",
                  "identifier": "1115",
                  "name": "sarcoma",
                  "annotation": {
                    "rdf_uri": "http://www.openbel.org/bel/namespace/disease-ontology",
                    "name": "Disease Ontology",
                    "prefix": "do",
                    "domain": "disease"
                  },
                  "_links": {
                    "self": {
                      "type": "annotation_value",
                      "href": "http://localhost/api/annotations/disease-ontology/values/1115"
                    },
                    "collection": {
                      "type": "annotation",
                      "href": "http://localhost/api/annotations/disease-ontology"
                    }
                  }
                }
              }
              ```
            headers: {}
            responses:
              '200':
                body:
                  application/json:
                    schema: '{}'
                    example: |-
                      {
                          "annotation_value": {
                              "type": "BiologicalProcessConcept",
                              "identifier": "1115",
                              "name": "sarcoma",
                              "_links": {
                                  "self": {
                                      "type": "annotation_value",
                                      "href": "http://localhost/api/annotations/disease-ontology/values/1115"
                                  },
                                  "collection": {
                                      "type": "annotation",
                                      "href": "http://localhost/api/annotations/disease-ontology"
                                  }
                              }
                          }
                      }
                description: |
                  [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)

                  **JSON Schema**
                  - [annotation_value](schemas/annotation_value_resource.schema.json)
            queryParameters: {}
          options:
            displayName: OPTIONS_annotations-annotation-values-value
            description: |
              Returns allowable HTTP methods for this annotation_value resource.
            headers: {}
            responses: {}
            queryParameters: {}
        options:
          displayName: OPTIONS_annotations-annotation-values
          description: |
            Returns allowable HTTP methods for this annotation_value_collection.
          headers: {}
          responses: {}
          queryParameters: {}
      uriParameters:
        annotation:
          description: annotation
          type: string
          displayName: annotation
      options:
        displayName: OPTIONS_annotations-annotation
        description: |
          Returns allowable HTTP methods for this annotation resource.
        headers: {}
        responses: {}
        queryParameters: {}
      get:
        displayName: GET_annotations-annotation
        description: |
          Returns the *annotation* resource identified by *{annotation}* URI parameter.
        headers: {}
        responses:
          '200':
            body:
              application/json:
                schema: '{}'
                example: |-
                  {
                      "annotation": {
                          "rdf_uri": "http://www.openbel.org/bel/namespace/disease-ontology",
                          "name": "Disease Ontology",
                          "prefix": "do",
                          "domain": "disease"
                      },
                      "_links": {
                          "self": {
                              "type": "annotation",
                              "href": "http://localhost/api/annotations/do"
                          }
                      }
                  }
            description: |
              [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)

              **JSON Schema**
              - [annotation](schemas/annotation_resource.schema.json)
        queryParameters: {}
    /values:
      displayName: values
      description: ''
      uriParameters: {}
      get:
        displayName: GET_annotations-values
        description: |
          Returns the *annotation_value_collection* across all *annotation* resources.

          <br>
          **Limitations**

          This endpoint is limited to full-text searching including a *filter* like:
          ```json
          {
              "category": "fts",
              "name":     "search",
              "value":    "sarcoma"
          }
          ```

          <br>
          **Nested Annotation**

          All returned *annotation_value* in the *annotation_value_collection* will include the *annotation* it is found in.
          For example if *sarcoma* is found in the *Disease Ontology* annotation then the following will be included in the value:

          ```json
          annotation": {
            "rdf_uri": "http://www.openbel.org/bel/namespace/disease-ontology",
            "name": "Disease Ontology",
            "prefix": "do",
            "domain": "disease"
          },
          ```

          <br>
          **Additional Property**

          A `match_text` property, included in each *annotation_value*, provides the snippet of text that matched the search. The matched term will be prefixed with `<<` and suffixed with `>>`.

          <br>
          **Complete Example**

          **<sub>GET http://localhost/api/annotations/values?filter={%22category%22:%22fts%22,%22name%22:%22search%22,%22value%22:%22sarcoma%22}&start=0&size=3</sub>**

          ```json
          {
            "annotation_value_collection": [
              {
                "annotation_value": {
                  "type": "BiologicalProcessConcept",
                  "identifier": "D012509",
                  "name": "Sarcoma",
                  "annotation": {
                    "rdf_uri": "http://www.openbel.org/bel/namespace/mesh-diseases",
                    "name": "Mesh Diseases",
                    "prefix": "meshd",
                    "domain": "disease"
                  },
                  "match_text": "...Sarcomas, Spindle Cell Soft Tissue <<Sarcoma>> Soft Tissue Sarcomas Spindle Cell <<Sarcoma>> Spindle Cell Sarcomas",
                  "_links": {
                    "self": {
                      "type": "annotation_value",
                      "href": "http://localhost/api/annotations/mesh-diseases/values/D012509"
                    },
                    "collection": {
                      "type": "annotation",
                      "href": "http://localhost/api/annotations/mesh-diseases"
                    }
                  }
                }
              },
              {
                "annotation_value": {
                  "type": "BiologicalProcessConcept",
                  "identifier": "1115",
                  "name": "sarcoma",
                  "annotation": {
                    "rdf_uri": "http://www.openbel.org/bel/namespace/disease-ontology",
                    "name": "Disease Ontology",
                    "prefix": "do",
                    "domain": "disease"
                  },
                  "match_text": "<<sarcoma>>",
                  "_links": {
                    "self": {
                      "type": "annotation_value",
                      "href": "http://localhost/api/annotations/disease-ontology/values/1115"
                    },
                    "collection": {
                      "type": "annotation",
                      "href": "http://localhost/api/annotations/disease-ontology"
                    }
                  }
                }
              },
              {
                "annotation_value": {
                  "type": "BiologicalProcessConcept",
                  "identifier": "D008223",
                  "name": "Lymphoma",
                  "annotation": {
                    "rdf_uri": "http://www.openbel.org/bel/namespace/mesh-diseases",
                    "name": "Mesh Diseases",
                    "prefix": "meshd",
                    "domain": "disease"
                  },
                  "match_text": "Germinoblastic <<Sarcoma>> Germinoblastic Sarcomas Germinoblastoma Germinoblastomas Lymphoma, Malignant Lymphomas Lymphomas, Malignant Malignant Lymphoma Malignant Lymphomas...",
                  "_links": {
                    "self": {
                      "type": "annotation_value",
                      "href": "http://localhost/api/annotations/mesh-diseases/values/D008223"
                    },
                    "collection": {
                      "type": "annotation",
                      "href": "http://localhost/api/annotations/mesh-diseases"
                    }
                  }
                }
              }
            ]
          }
          ```
        headers: {}
        responses:
          '200':
            body:
              application/json:
                schema: '{}'
                example: |-
                  {
                      "annotation_value_collection": [
                          {
                              "annotation_value": {
                                  "type": "BiologicalProcessConcept",
                                  "identifier": "D012509",
                                  "name": "Sarcoma",
                                  "match_text": "...Sarcomas, Spindle Cell Soft Tissue &lt;&lt;Sarcoma&gt;&gt; Soft Tissue Sarcomas Spindle Cell &lt;&lt;Sarcoma&gt;&gt; Spindle Cell Sarcomas",
                                  "_links": {
                                      "self": {
                                          "type": "annotation_value",
                                          "href": "http://localhost/api/annotations/mesh-diseases/values/D012509"
                                      },
                                      "collection": {
                                          "type": "annotation",
                                          "href": "http://localhost/api/annotations/mesh-diseases"
                                      }
                                  }
                              }
                          },
                          {
                              "annotation_value": {
                                  "type": "BiologicalProcessConcept",
                                  "identifier": "1115",
                                  "name": "sarcoma",
                                  "match_text": "&lt;&lt;sarcoma&gt;&gt;",
                                  "_links": {
                                      "self": {
                                          "type": "annotation_value",
                                          "href": "http://localhost/api/annotations/disease-ontology/values/1115"
                                      },
                                      "collection": {
                                          "type": "annotation",
                                          "href": "http://localhost/api/annotations/disease-ontology"
                                      }
                                  }
                              }
                          },
                          {
                              "annotation_value": {
                                  "type": "BiologicalProcessConcept",
                                  "identifier": "D008223",
                                  "name": "Lymphoma",
                                  "match_text": "Germinoblastic &lt;&lt;Sarcoma&gt;&gt; Germinoblastic Sarcomas Germinoblastoma Germinoblastomas Lymphoma, Malignant Lymphomas Lymphomas, Malignant Malignant Lymphoma Malignant Lymphomas...",
                                  "_links": {
                                      "self": {
                                          "type": "annotation_value",
                                          "href": "http://localhost/api/annotations/mesh-diseases/values/D008223"
                                      },
                                      "collection": {
                                          "type": "annotation",
                                          "href": "http://localhost/api/annotations/mesh-diseases"
                                      }
                                  }
                              }
                          }
                      ]
                  }
            description: |
              [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)

              **JSON Schema**
              - [annotation_value_collection](schemas/annotation_value_collection.schema.json)
              - [annotation_value](schemas/annotation_value_resource.schema.json)
        queryParameters:
          start:
            type: integer
            description: |
              The annotation value resource to start from for paging purposes.
            displayName: start
          size:
            type: integer
            description: |
              The size of the annotation value resource collection to retrieve. This will return a slice of the annotation value resource collection relative to *start*.

              A size of zero or less will return all values.
            displayName: size
          filter:
            type: string
            description: |
              A filter to apply to the annotation value resource collection to narrow the resources retrieved.
            displayName: filter
          faceted:
            type: string
            description: |
              The boolean indicator to provided faceted results for the annotation value resource collection. The default is to not facet.
            enum:
              - 'true'
              - 'yes'
              - '1'
              - 'on'
            displayName: faceted
      options:
        displayName: OPTIONS_annotations-values
        description: |
          Returns allowable HTTP methods for this annotation_value_collection.
        headers: {}
        responses: {}
        queryParameters: {}
    uriParameters: {}
    get:
      displayName: GET_annotations
      description: |
        Returns the *annotation_collection* containing an array of all *annotation* resources.

        An *annotation* resource contains fields:
        - prefLabel: human-readable name
        - prefix:    short prefix
        - domain:    biological domain

        The collection contains zero or more *annotation* resource objects. If the *annotation_collection* is empty then the result is an empty array.
      headers: {}
      responses:
        '200':
          body:
            application/json:
              schema: '{}'
              example: |-
                {
                    "annotation_collection": [
                        {
                            "annotation": {
                                "uri": "http://www.openbel.org/bel/namespace/cell-line-ontology",
                                "type": "http://www.w3.org/2004/02/skos/core#ConceptScheme",
                                "prefLabel": "Cell Line Ontology",
                                "domain": "cell-line",
                                "prefix": "clo"
                            },
                            "_links": {
                                "self": {
                                    "type": "annotation",
                                    "href": "http://localhost/api/annotations/clo"
                                }
                            }
                        },
                        {
                            "annotation": {
                                "uri": "http://www.openbel.org/bel/namespace/cell-ontology",
                                "type": "http://www.w3.org/2004/02/skos/core#ConceptScheme",
                                "prefLabel": "Cell Ontology",
                                "domain": "cell",
                                "prefix": "cl"
                            },
                            "_links": {
                                "self": {
                                    "type": "annotation",
                                    "href": "http://localhost/api/annotations/cl"
                                }
                            }
                        },
                        {
                            "annotation": {
                                "uri": "http://www.openbel.org/bel/namespace/disease-ontology",
                                "type": "http://www.openbel.org/vocabulary/NamespaceConceptScheme",
                                "prefLabel": "Disease Ontology",
                                "domain": "disease",
                                "prefix": "do"
                            },
                            "_links": {
                                "self": {
                                    "type": "annotation",
                                    "href": "http://localhost/api/annotations/do"
                                }
                            }
                        },
                        {
                            "annotation": {
                                "uri": "http://www.openbel.org/bel/namespace/experimental-factor-ontology",
                                "type": "http://www.w3.org/2004/02/skos/core#ConceptScheme",
                                "prefLabel": "Experimental Factor Ontology",
                                "domain": "cell-line",
                                "prefix": "efo"
                            },
                            "_links": {
                                "self": {
                                    "type": "annotation",
                                    "href": "http://localhost/api/annotations/efo"
                                }
                            }
                        },
                        {
                            "annotation": {
                                "uri": "http://www.openbel.org/bel/namespace/mesh-anatomy",
                                "type": "http://www.w3.org/2004/02/skos/core#ConceptScheme",
                                "prefLabel": "Mesh Anatomy",
                                "domain": "anatomy",
                                "prefix": "mesha"
                            },
                            "_links": {
                                "self": {
                                    "type": "annotation",
                                    "href": "http://localhost/api/annotations/mesha"
                                }
                            }
                        },
                        {
                            "annotation": {
                                "uri": "http://www.openbel.org/bel/namespace/mesh-cellular-structures",
                                "type": "http://www.openbel.org/vocabulary/NamespaceConceptScheme",
                                "prefLabel": "Mesh Cellular Structures",
                                "domain": "location",
                                "prefix": "meshcs"
                            },
                            "_links": {
                                "self": {
                                    "type": "annotation",
                                    "href": "http://localhost/api/annotations/meshcs"
                                }
                            }
                        },
                        {
                            "annotation": {
                                "uri": "http://www.openbel.org/bel/namespace/mesh-diseases",
                                "type": "http://www.openbel.org/vocabulary/NamespaceConceptScheme",
                                "prefLabel": "Mesh Diseases",
                                "domain": "disease",
                                "prefix": "meshd"
                            },
                            "_links": {
                                "self": {
                                    "type": "annotation",
                                    "href": "http://localhost/api/annotations/meshd"
                                }
                            }
                        },
                        {
                            "annotation": {
                                "uri": "http://www.openbel.org/bel/namespace/ncbi-taxonomy",
                                "type": "http://www.w3.org/2004/02/skos/core#ConceptScheme",
                                "prefLabel": "Ncbi Taxonomy",
                                "domain": "species",
                                "prefix": "taxon"
                            },
                            "_links": {
                                "self": {
                                    "type": "annotation",
                                    "href": "http://localhost/api/annotations/taxon"
                                }
                            }
                        },
                        {
                            "annotation": {
                                "uri": "http://www.openbel.org/bel/namespace/uberon",
                                "type": "http://www.w3.org/2004/02/skos/core#ConceptScheme",
                                "prefLabel": "Uberon",
                                "domain": "anatomy",
                                "prefix": "uberon"
                            },
                            "_links": {
                                "self": {
                                    "type": "annotation",
                                    "href": "http://localhost/api/annotations/uberon"
                                }
                            }
                        }
                    ],
                    "_links": {
                        "self": {
                            "type": "annotation_collection",
                            "href": "http://localhost/api/annotations"
                        },
                        "start": {
                            "type": "start",
                            "href": "http://localhost/api/annotations/values"
                        }
                    }
                }
          description: |
            [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)

            **JSON Schema**
            - [annotation_collection](schemas/annotation_collection.schema.json)
            - [annotation](schemas/annotation_resource.schema.json)
      queryParameters: {}
    options:
      displayName: OPTIONS_annotations
      description: |
        Returns allowable HTTP methods for this annotation_collection.
      headers: {}
      responses: {}
      queryParameters: {}
  /expressions:
    displayName: expressions
    description: ''
    '/{bel}':
      displayName: '{bel}'
      description: ''
      /completions:
        displayName: completions
        description: ''
        uriParameters: {}
        get:
          displayName: GET_expressions-bel-completions
          description: |
            Retrieve completions for the *BEL* expression fragment. The caret position to complete from defaults to the end of *BEL* expression fragment.

            Examples:

            - *aabund* yields functions *microRNAAbundance* and *rnaAbundance*
            - *p(H* yields functions *chaperoneActivity*, *pathology*, *phosphataseActivity* and namespace prefixes *CHEBI*, *CHEBIID*, *HGNC*, *MESHCS*, *MESHD*, *MESHPP*, *SCHEM*
            - *tscript(p(HGNC:* yields namespace values *AKT1*, *AKT2*, etc.

            Custom Caret Position:

            The caret position can be provided to indicate where to complete from.

            Examples:

            - *pro(HGNC:*, *caret_position*: `2` yields functions *biologicalProcess*, *products*, *proteinAbundance*, and *proteinModification*
          headers:
            Accept:
              type: string
              displayName: Accept
          responses:
            '200':
              body:
                application/json:
                  schema: '{}'
                  example: |-
                    {
                        "completion_collection": [
                            {
                                "completion": {
                                    "type": "namespace_prefix",
                                    "label": "HGNC",
                                    "value": "HGNC:",
                                    "highlight": {
                                        "start_position": 2,
                                        "end_position": 3,
                                        "range_type": "inclusive"
                                    },
                                    "actions": [
                                        {
                                            "delete": {
                                                "start_position": 2,
                                                "end_position": 3,
                                                "range_type": "inclusive"
                                            },
                                            "insert": {
                                                "position": 2,
                                                "value": "HGNC:"
                                            },
                                            "move_cursor": {
                                                "position": 7
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
              description: |
                [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)

                **JSON Schema**
                - [completion_collection](schemas/completion_collection.schema.json)
                - [completion_resource](schemas/completion_resource.schema.json)
          queryParameters:
            caret_position:
              type: integer
              description: |
                The position of the caret within the *bel* input. Defaults to the right-most caret_position for *bel* (e.g. length of *bel* input).
              displayName: caret_position
        options:
          displayName: OPTIONS_expressions-bel-completions
          description: Returns allowable HTTP methods.
          headers: {}
          responses: {}
          queryParameters: {}
      /components:
        displayName: components
        description: ''
        uriParameters: {}
        options:
          displayName: OPTIONS_expressions-bel-components
          description: Returns allowable HTTP methods.
          headers: {}
          responses: {}
          queryParameters: {}
        get:
          displayName: GET_expressions-bel-components
          description: |
            Retrieve the components of a *BEL* expression fragment. Currently this will only return the *subject*, *relationship*, and *object* understood from BEL statement expression.

            Examples:

              - *p(HGNC:AKT1)* yields:

                ```json
                  {
                    "expression_components": {
                      "subject": {
                        "term": {
                          "fx": "proteinAbundance",
                          "arguments": [
                            {
                              "parameter": {
                                "ns": "HGNC",
                                "value": "AKT1"
                              }
                            }
                          ]
                        }
                      },
                      "relationship": null,
                      "object": null
                    },
                    "statement_short_form": "p(HGNC:AKT1)"
                  }
                ```

              - *p(HGNC:AKT1) -> bp(MESHPP:Apoptosis)* yields:

                ```json
                  {
                    "expression_components": {
                      "subject": {
                        "term": {
                          "fx": "proteinAbundance",
                          "arguments": [
                            {
                              "parameter": {
                                "ns": "HGNC",
                                "value": "AKT1"
                              }
                            }
                          ]
                        }
                      },
                      "relationship": "increases",
                      "object": {
                        "term": {
                          "fx": "biologicalProcess",
                          "arguments": [
                            {
                              "parameter": {
                                "ns": "MESHPP",
                                "value": "Apoptosis"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "statement_short_form": "p(HGNC:AKT1) -> bp(MESHPP:Apoptosis)"
                  }
                ```

              - *a(CHEBI:"phosphatidyl-L-serine") increases pep(p(HGNC:F3))* yields:

                ```json
                  {
                    "expression_components": {
                      "subject": {
                        "term": {
                          "fx": "abundance",
                          "arguments": [
                            {
                              "parameter": {
                                "ns": "CHEBI",
                                "value": "phosphatidyl-L-serine"
                              }
                            }
                          ]
                        }
                      },
                      "relationship": "increases",
                      "object": {
                        "term": {
                          "fx": "peptidaseActivity",
                          "arguments": [
                            {
                              "term": {
                                "fx": "proteinAbundance",
                                "arguments": [
                                  {
                                    "parameter": {
                                      "ns": "HGNC",
                                      "value": "F3"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    "statement_short_form": "a(CHEBI:\"phosphatidyl-L-serine\") increases pep(p(HGNC:F3))"
                  }
                ```
          headers: {}
          responses:
            '200':
              body:
                application/json:
                  schema: '{}'
                  example: |-
                    {
                        "expression_components": {
                            "subject": "a(CHEBI:\"phosphatidyl-L-serine\")",
                            "relationship": "increases",
                            "object": "pep(p(HGNC:F3))"
                        },
                        "statement_short_form": "a(CHEBI:\"phosphatidyl-L-serine\") increases pep(p(HGNC:F3))"
                    }
              description: |
                [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)
          queryParameters:
            flatten:
              type: string
              description: |
                The boolean indicator to flatten subject and object to strings. The default is to expand down to the terms and parameters.
              enum:
                - 'true'
                - 'yes'
                - '1'
                - 'on'
              displayName: flatten
  /nanopubs:
    displayName: nanopubs
    description: ''
    '/{identifier}':
      displayName: '{identifier}'
      description: ''
      uriParameters:
        identifier:
          description: identifier
          type: string
          displayName: identifier
      put:
        displayName: PUT_nanopubs-identifier
        description: |
          Replaces a BEL Nanopub resource identified by *{identifier}*.

          **JSON Schema**
          - [nanopub_resource](schemas/nanopub_resource.schema.json)
          - [nanopub](schemas/nanopub.schema.json)
        body:
          application/json:
            example: |-
              {
                  "nanopub": {
                      "bel_statement": "p(HGNC:MAPK1,pmod(P,T)) => kin(p(HGNC:MAPK1))",
                      "citation": {
                          "type": "PubMed",
                          "name": "J Biol Chem. 1997 Jul 4;272(27):16917-23.",
                          "id": "9202001"
                      },
                      "summary_text": "These kinases are regulated by the reversible dual\nphosphorylation of conserved threonine and tyrosine residues.",
                      "experiment_context": [
                          {
                              "name": "Species",
                              "value": "9606",
                              "uri": "http://resource.belframework.org/belframework/20150611/annotation/species-taxonomy-id.belanno/9606",
                              "url": "http://resource.belframework.org/belframework/20150611/annotation/species-taxonomy-id.belanno"
                          },
                          {
                              "name": "CellLine",
                              "value": "U-937",
                              "uri": "http://resource.belframework.org/belframework/20150611/annotation/cell-line.belanno/U-937",
                              "url": "http://resource.belframework.org/belframework/20150611/annotation/cell-line.belanno"
                          }
                      ],
                      "references": {
                          "namespaces": {
                              "SFAM": "http://resource.belframework.org/belframework/20150611/namespace/selventa-protein-families.belns",
                              "SCOMP": "http://resource.belframework.org/belframework/20150611/namespace/selventa-named-complexes.belns",
                              "HGNC": "http://resource.belframework.org/belframework/20150611/namespace/hgnc-human-genes.belns",
                              "CHEBI": "http://resource.belframework.org/belframework/20150611/namespace/chebi.belns"
                          },
                          "annotations": {
                              "CellLine": {
                                  "type": "url",
                                  "domain": "http://resource.belframework.org/belframework/20150611/annotation/cell-line.belanno"
                              },
                              "Species": {
                                  "type": "url",
                                  "domain": "http://resource.belframework.org/belframework/20150611/annotation/species-taxonomy-id.belanno"
                              }
                          }
                      },
                      "metadata": [
                          {
                              "name": "document_header",
                              "value": {
                                  "Name": "BEL Framework Example 1 Document",
                                  "Description": "Example of modeling a full abstract taken from the BEL V1.0 Language Overview. ",
                                  "Version": "20150611",
                                  "Copyright": "Copyright (c) 2011-2015, Selventa. All Rights Reserved.",
                                  "ContactInfo": "support@belframework.org",
                                  "Authors": "Selventa",
                                  "Licenses": "Creative Commons Attribution-Non-Commercial-ShareAlike 3.0 Unported License"
                              }
                          }
                      ]
                  }
              }
            schema: '{}'
        headers: {}
        responses: {}
        queryParameters: {}
      get:
        displayName: GET_nanopubs-identifier
        description: |
          Retrieve the BEL Nanopub resource identified by *{identifier}*.
        headers: {}
        responses:
          '200':
            body:
              application/json:
                schema: '{}'
                example: |-
                  {
                      "nanopub": {
                          "bel_statement": "a(\"cyclic AMP\") increases r(HGNC:AR)",
                          "citation": {
                              "type": "PubMed",
                              "name": "J Clin Endocrinol Metab 2003 Sep 88(9) 4043-54",
                              "id": "12970260",
                              "date": "",
                              "authors": [],
                              "comment": ""
                          },
                          "summary_text": "Treatment with the cAMP analog dibutyryl cAMP enhanced AR promoter activity about 4- to 6-fold in a reporter gene assay and increased AR mRNA expression in LNCaP cells",
                          "experiment_context": [
                              {
                                  "name": "Species",
                                  "value": "9606"
                              }
                          ],
                          "metadata": [
                              {
                                  "name": "document_header",
                                  "value": {
                                      "Name": "BEL Framework Large Corpus Document",
                                      "Description": "Approximately 61,000 statements.",
                                      "Version": "20150611",
                                      "Copyright": "Copyright (c) 2011-2015, Selventa. All rights reserved.",
                                      "Authors": "Selventa",
                                      "Licenses": "Creative Commons Attribution-Non-Commercial-ShareAlike 3.0 Unported License",
                                      "ContactInfo": "support@belframework.org"
                                  }
                              }
                          ]
                      },
                      "_links": {
                          "self": {
                              "type": "nanopub",
                              "href": "http://localhost/api/nanopubs/56015c7e8a4cca1317006aa7"
                          },
                          "collection": {
                              "type": "nanopub_collection",
                              "href": "http://localhost/api/nanopubs"
                          }
                      }
                  }
            description: |
              [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)

              An example request for this resource might be:

              - Path: `/api/nanopubs/56015c7e8a4cca1317006aa7`

              Example URL: [http://localhost/api/nanopubs/56015c7e8a4cca1317006aa7](http://localhost/api/nanopubs/56015c7e8a4cca1317006aa7)

              **JSON Schema**
              - [nanopub_resource](schemas/nanopub_resource.schema.json)
              - [nanopub](schemas/nanopub.schema.json)
        queryParameters: {}
      delete:
        displayName: DELETE_nanopubs-identifier
        description: |
          Deletes a BEL Nanopub resource identified by *{identifier}*.
        headers: {}
        responses: {}
        queryParameters: {}
      options:
        displayName: OPTIONS_nanopubs-identifier
        description: |
          Returns allowable HTTP methods for this nanopub resource.
        headers: {}
        responses: {}
        queryParameters: {}
    uriParameters: {}
    get:
      displayName: GET_nanopubs
      description: |
        Retrieve the nanopub resource collection.

        All nanopub resources will be returned by default.

        The collection can be returned page by page by providing a *start* (defaults to `0`) index and *size* (defaults to no size limit) to return.

        This collection can be filtered by providing one or more *filter* options. A filter specifies the *category*, *name*, and *value* of the filter and is encoded as a JSON object. For example an nanopub metadata filter might be encoded as:

        ```json
          {
            "category": "metadata",
            "name": "status",
            "value": "Approved"
          }
        ```

        This collection can be filtered using by a full-text search filter such as:

        ```json
          {
            "category": "fts",
            "name": "search",
            "value": "lung liver pancreas"
          }
        ```

        ```json
          {
            "category": "fts",
            "name": "search",
            "value": "\"subdural hematoma\""
          }
        ```

        This collection can specify the *faceted* boolean option. Facets will reflect all (possibly filtered) nanopub resources irrespective of *start* and *size* paging.

        Facts are an array of facet objects that are composed of a *filter* and *count*. For example for the nanopub metadata filter the facet object would be encoded as:

        ```json
          {
            "category": "metadata",
            "name": "Status",
            "values": [
              {
                "value": "Approved",
                "filter": "{\"category\":\"metadata\",\"name\":\"status\",\"value\":\"Approved\"}",
                "count": 10200
              }
            ]
          },
        ```

        The *filter* property value can be used as a *filter* option. This is intended to support filtering the nanopub resource collection by selected facets.

        The *max_values_per_facet* option can be specified to limit the number of returned facet values by category, name pairs. For example, setting *max_values_per_facet* to `2` would return up to 2 distinct facets values for `{ "category": "citation", "name": "id", ... }`.
      headers:
        Accept:
          type: string
          description: |
            The Accept header informs the server which media types the client accepts.
          displayName: Accept
      responses:
        '200':
          body:
            application/json:
              schema: '{}'
              example: |-
                {
                    "nanopub_collection": [
                        {
                            "nanopub": {
                                "bel_statement": "a(CHEBI:\"1-octadec-9-enoylglycero-3-phosphate\") increases kin(p(HGNC:EGFR))",
                                "citation": {
                                    "type": "PubMed",
                                    "name": "Exp Cell Res 2003 Mar 10 284(1) 99-110",
                                    "id": "12648469",
                                    "date": "",
                                    "authors": [],
                                    "comment": ""
                                },
                                "summary_text": "Treatment of cells with GPCR agonists such as endothelin- 1 (ET-1), thrombin, bombesin, and lysophosphatidic acid (LPA) transactivates ErbB1 (reviewed by Zwick et al. [48]). Mechanistically, the process involves rapid stimulation of metalloproteinases followed by cleavage of an ErbB1 ligand precursor, e.g., pro-HB-EGF [49], whose binding activates ErbB1 and downstream signaling pathways",
                                "experiment_context": [
                                    {
                                        "name": "Species",
                                        "value": "9606"
                                    },
                                    {
                                        "name": "Anatomy",
                                        "value": "prostate gland"
                                    },
                                    {
                                        "name": "Cell",
                                        "value": "squamous epithelial cell"
                                    }
                                ],
                                "metadata": [
                                    {
                                        "name": "document_header",
                                        "value": {
                                            "Name": "BEL Framework Large Corpus Document",
                                            "Description": "Approximately 61,000 statements.",
                                            "Version": "20150611",
                                            "Copyright": "Copyright (c) 2011-2015, Selventa. All rights reserved.",
                                            "Authors": "Selventa",
                                            "Licenses": "Creative Commons Attribution-Non-Commercial-ShareAlike 3.0 Unported License",
                                            "ContactInfo": "support@belframework.org"
                                        }
                                    }
                                ]
                            },
                            "_links": {
                                "self": {
                                    "type": "nanopub",
                                    "href": "http://localhost/api/nanopubs/56015a638a4cca1317005637"
                                },
                                "collection": {
                                    "type": "nanopub_collection",
                                    "href": "http://localhost/api/nanopubs"
                                }
                            }
                        }
                    ],
                    "facets": [
                        {
                            "category": "metadata",
                            "name": "document_header",
                            "values": [
                                {
                                    "value": [
                                        "Authors",
                                        "Selventa"
                                    ],
                                    "filter": "{\"category\":\"metadata\",\"name\":\"document_header\",\"value\":[\"Authors\",\"Selventa\"]}",
                                    "count": 423
                                }
                            ]
                        },
                        {
                            "category": "experiment_context",
                            "name": "Anatomy",
                            "values": [
                                {
                                    "value": "prostate gland",
                                    "filter": "{\"category\":\"experiment_context\",\"name\":\"Anatomy\",\"value\":\"prostate gland\"}",
                                    "count": 423
                                }
                            ]
                        },
                        {
                            "category": "experiment_context",
                            "name": "Species",
                            "values": [
                                {
                                    "value": "9606",
                                    "filter": "{\"category\":\"experiment_context\",\"name\":\"Species\",\"value\":\"9606\"}",
                                    "count": 263
                                }
                            ]
                        },
                        {
                            "category": "citation",
                            "name": "id",
                            "values": [
                                {
                                    "value": "12351634",
                                    "filter": "{\"category\":\"citation\",\"name\":\"id\",\"value\":\"12351634\"}",
                                    "count": 62
                                }
                            ]
                        },
                        {
                            "category": "experiment_context",
                            "name": "Cell",
                            "values": [
                                {
                                    "value": "fibroblast",
                                    "filter": "{\"category\":\"experiment_context\",\"name\":\"Cell\",\"value\":\"fibroblast\"}",
                                    "count": 20
                                }
                            ]
                        },
                        {
                            "category": "experiment_context",
                            "name": "Cellline",
                            "values": [
                                {
                                    "value": "LNCAP cell",
                                    "filter": "{\"category\":\"experiment_context\",\"name\":\"Cellline\",\"value\":\"LNCAP cell\"}",
                                    "count": 17
                                }
                            ]
                        },
                        {
                            "category": "experiment_context",
                            "name": "Disease",
                            "values": [
                                {
                                    "value": "prostate carcinoma in situ",
                                    "filter": "{\"category\":\"experiment_context\",\"name\":\"Disease\",\"value\":\"prostate carcinoma in situ\"}",
                                    "count": 13
                                }
                            ]
                        },
                        {
                            "category": "experiment_context",
                            "name": "Cellstructure",
                            "values": [
                                {
                                    "value": "Cytoplasm",
                                    "filter": "{\"category\":\"experiment_context\",\"name\":\"Cellstructure\",\"value\":\"Cytoplasm\"}",
                                    "count": 4
                                }
                            ]
                        }
                    ],
                    "metadata": {
                        "collection_paging": {
                            "total": 52399,
                            "total_filtered": 423,
                            "total_pages": 423,
                            "current_page": 1,
                            "current_page_size": 1
                        }
                    },
                    "_links": {
                        "self": {
                            "type": "nanopub_collection",
                            "href": "http://localhost/api/nanopubs?start=0&size=1&filter={\"category\":\"experiment_context\",\"name\":\"Anatomy\",\"value\":\"prostate gland\"}"
                        },
                        "start": {
                            "type": "nanopub_collection",
                            "href": "http://localhost/api/nanopubs?start=0&size=1&filter={\"category\":\"experiment_context\",\"name\":\"Anatomy\",\"value\":\"prostate gland\"}"
                        },
                        "next": {
                            "type": "nanopub_collection",
                            "href": "http://localhost/api/nanopubs?start=1&size=1&filter={\"category\":\"experiment_context\",\"name\":\"Anatomy\",\"value\":\"prostate gland\"}"
                        }
                    }
                }
          description: |
            [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)

            An example request for this resource might be:

            - Path: `/api/nanopubs`
            - Query parameters:
              - `start=0`
              - `size=1`
              - `faceted=yes`
              - `max_values_per_facet=1`
              - `filter`
              ```json
              {
                "category":"experiment_context",
                "name":"Anatomy",
                "value":"prostate gland"
              }
              ```

            Example URL: [http://localhost/api/nanopubs?start=0&size=1&faceted=yes&max_values_per_facet=1&filter={"category":"experiment_context","name":"Anatomy","value":"prostate gland"}](http://localhost/api/nanopubs?start=0&size=1&faceted=yes&max_values_per_facet=1&filter={%22category%22:%22experiment_context%22,%22name%22:%22Anatomy%22,%22value%22:%22prostate gland%22})

            **JSON Schema**
            - [nanopub_collection](schemas/nanopub_collection.schema.json)
            - [nanopub_resource](schemas/nanopub_resource.schema.json)
            - [nanopub](schemas/nanopub.schema.json)
      queryParameters:
        start:
          type: integer
          description: |
            The nanopub resource to start from for paging purposes.

            The default value is `0`. This value will return nanopub resources starting from the beginning of collection.
          displayName: start
        size:
          type: integer
          description: |
            The size of the nanopub resource collection to retrieve. This will return a slice of the nanopub resource collection relative to *start*.

            The default is `0`. This value will return all nanopub resources in the collection.
          displayName: size
        filter:
          type: string
          description: |
            A filter to apply to the nanopub resource collection to narrow the resources retrieved.

            The default is to not apply filters. If filters are not specified then all nanopub resources, in the collection, will be returned.

            **Example Usage:**

            Find nanopubs matching either `prostate` or `gland`.
            ```
            {"category":"experiment_context","name":"Anatomy","value":"prostate gland"}
            ```

            Find nanopubs matching the phrase `subdural hematoma` or `carcinoma`.
            ```
            {"category":"fts","name":"search","value":"\"subdural hematoma\" carcinoma"}
            ```

            Find nanopubs matching `homatoma` but not `carcinoma`.
            ```
            {"category":"fts","name":"search","value":"homatoma -carcinoma"}
            ```
          displayName: filter
        faceted:
          type: string
          description: |
            The boolean indicator to provided faceted results for the nanopub resource collection.

            The default is `false`. This value will not return facets in the response.
          enum:
            - 'true'
            - 'yes'
            - '1'
            - 'on'
          displayName: faceted
        max_values_per_facet:
          type: integer
          description: |
            e| The maximum about of facet values to display for every category, name pair.
            The default is `0`. This value will return all facet values (i.e. unbounded) for every category, name pair.
          displayName: max_values_per_facet
    options:
      displayName: OPTIONS_nanopubs
      description: |
        Returns allowable HTTP methods for this nanopub collection.
      headers: {}
      responses: {}
      queryParameters: {}
    post:
      displayName: POST_nanopubs
      description: |
        Creates one or more BEL Nanopubs within the API.

        The following formats are supported:
        - BEL Nanopub JSON
          - media type:  `application/json`
          - JSON schema: [nanopub.schema.json](http://localhost/schemas/nanopub.schema.json)
        - BEL Script
          - defined by [BEL Script V1.0 Format](http://wiki.openbel.org/display/BLDV20/BEL+Script+V1.0+Format)
          - media type: `application/bel`
        - XBEL (XML)
          - media type: `application/xml`
          - XML Schema: [xbel](http://resource.belframework.org/belframework/20150611/schema/xbel.xsd), [xbel-annotations](http://resource.belframework.org/belframework/20150611/schema/xbel-annotations.xsd)
        - [BEL JSON Graph Format](http://jsongraphformat.info/)
          - media type:  `application/vnd.jgf+json`
          - JSON schema: [bel-json-graph-2.0.schema.json](http://jsongraphformat.info/child-schemas/bel-json-graph-2.0.schema.json)
        - BEL RDF
          - defined within [bel.rb](https://github.com/OpenBEL/bel.rb) as a [format extension](https://github.com/OpenBEL/bel.rb/wiki/Format-Extensions). See [source](https://github.com/OpenBEL/bel.rb/tree/c1471942ce8326ad2399d66154c858d6a9fbcd6b/lib/bel/extensions/rdf)
          - media type
            - `application/n-quads`
            - `application/n-triples`
            - `application/rdf+xml`
            - `application/turtle`
            - `application/x-turtle`
            - `text/turtle`

        <br/>
        If you send a single BEL Nanopub JSON object then the resource's *Location* will be returned. However if you send multiple BEL Nanopubs using any of the supported formats above then a *Location* will not be returned. This will be addressed in a future version.
      body: {}
      headers: {}
      responses: {}
      queryParameters: {}
  uriParameters: {}
  options:
    displayName: OPTIONS_api
    description: |
      Returns allowable HTTP methods for this root resource.
    headers: {}
    responses: {}
    queryParameters: {}
  get:
    displayName: GET_api
    description: |
      Returns a list of linked *item* resources.
    headers: {}
    responses:
      '200':
        body:
          application/hal+json:
            schema: '{}'
            example: |-
              {
                  "_links": {
                      "item": [
                          {
                              "type": "annotation_collection",
                              "href": "http://localhost/api/annotations"
                          },
                          {
                              "type": "nanopub_collection",
                              "href": "http://localhost/api/nanopubs"
                          },
                          {
                              "type": "expression_collection",
                              "href": "http://localhost/api/expressions"
                          },
                          {
                              "type": "language_collection",
                              "href": "http://localhost/api/language"
                          },
                          {
                              "type": "namespace_collection",
                              "href": "http://localhost/api/namespaces"
                          }
                      ]
                  }
              }
        description: |
          [200 OK](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1)
    queryParameters: {}
schemas:
  - nanopub_resource: |-
      {
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "BEL Nanopub Resource",
          "description": "A single nanopub resource.",
          "type": "object",
          "additionalProperties": false,
          "required": [
              "nanopub"
          ],
          "properties": {
              "allOf": [
                  {
                      "$ref": "nanopub.schema.json"
                  },
                  {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                          "links"
                      ],
                      "properties": {
                          "links": {
                              "type": "object"
                          }
                      }
                  }
              ]
          }
      }
  - annotation_collection: |-
      {
          "$schema": "http://json-schema.org/draft-04/schema",
          "description": "DESCRIBE ANNOTATION COLLECTION",
          "type": "object",
          "additionalProperties": false,
          "required": [
              "annotation_collection"
          ],
          "properties": {
              "annotation_collection": {
                  "type": "array",
                  "minItems": 0,
                  "title": "",
                  "description": "",
                  "items": {
                      "$ref": "http://localhost/schemas/annotation_resource.schema.json"
                  }
              }
          }
      }
  - annotation_value_collection: |-
      {
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "Annotation Value Collection",
          "description": "A collection of annotation value resources.",
          "type": "object",
          "additionalProperties": false,
          "required": [
              "annotation_value_collection"
          ],
          "properties": {
              "annotation_value_collection": {
                  "type": "array",
                  "minItems": 0,
                  "title": "",
                  "description": "",
                  "items": {
                      "$ref": "http://localhost/schemas/annotation_value_resource.schema.json"
                  }
              }
          }
      }
  - annotation_value_resource: |-
      {
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "Annotation Value Resource",
          "description": "A single annotation value within a BEL Annotation.",
          "type": "object",
          "additionalProperties": false,
          "required": [
              "annotation_value"
          ],
          "properties": {
              "annotation_value": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                      "type",
                      "identifier",
                      "name"
                  ],
                  "properties": {
                      "type": {
                          "type": "string"
                      },
                      "identifier": {
                          "type": "string"
                      },
                      "name": {
                          "type": "string"
                      },
                      "match_text": {
                          "type": "string"
                      }
                  }
              }
          }
      }
  - nanopub: |-
      {
          "$schema": "http://json-schema.org/draft-04/schema",
          "description": "DESCRIBE NANOPUB",
          "type": "object",
          "additionalProperties": false,
          "required": [
              "nanopub"
          ],
          "properties": {
              "nanopub": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                      "bel_statement",
                      "citation"
                  ],
                  "properties": {
                      "bel_statement": {
                          "type": "string",
                          "title": "BEL Statement",
                          "description": "A BEL Statement is an expression that represents knowledge of the existence of biological entities and relationships between them that are known to be observed within a particular context, based on some source of prior knowledge such as a scientific publication or newly generated experimental data."
                      },
                      "citation": {
                          "type": "object",
                          "title": "Citation",
                          "description": "The citation specifies the written source where the biological knowledge was referenced.",
                          "required": [
                              "type",
                              "id"
                          ],
                          "properties": {
                              "type": {
                                  "type": "string",
                                  "enum": [
                                      "PubMed",
                                      "Book",
                                      "Journal",
                                      "Online Resource",
                                      "Other"
                                  ],
                                  "title": "Citation Type",
                                  "description": "The citation type of the reference."
                              },
                              "id": {
                                  "type": [
                                      "string",
                                      "number"
                                  ],
                                  "title": "Citation ID",
                                  "description": "The citation identifier (PubMed ID, ISBN, DOI, URL) of the reference."
                              },
                              "name": {
                                  "type": "string",
                                  "title": "Citation Name",
                                  "description": "The citation name of the reference."
                              },
                              "date": {
                                  "type": "string",
                                  "title": "Citation Date",
                                  "description": "The citation date of the reference."
                              },
                              "authors": {
                                  "type": "array",
                                  "title": "Citation Authors",
                                  "description": "The citation authors of the reference.",
                                  "items": {
                                      "type": "string",
                                      "minItems": 0
                                  }
                              },
                              "comment": {
                                  "type": "string",
                                  "title": "Citation Comment",
                                  "description": "The citation comment of the reference."
                              }
                          }
                      },
                      "experiment_context": {
                          "type": [
                              "array",
                              "null"
                          ],
                          "title": "Experiment Context",
                          "description": "An experiment context specifies the experiment's parameters where this interaction was observed.",
                          "items": {
                              "type": "object",
                              "required": [
                                  "name",
                                  "value"
                              ],
                              "properties": {
                                  "name": {
                                      "type": "string",
                                      "title": "Annotation Type",
                                      "description": "Annotation type listing - sourced from the BEL Annotation resource names"
                                  },
                                  "value": {
                                      "type": [
                                          "string",
                                          "number",
                                          "boolean",
                                          "array"
                                      ],
                                      "title": "Annotations",
                                      "description": "Annotations such as Homo sapiens, cancer, epithelial tissue sourced from the BEL Annotation resources",
                                      "items": {
                                          "type": [
                                              "string",
                                              "number",
                                              "boolean"
                                          ]
                                      }
                                  },
                                  "uri": {
                                      "type": "string",
                                      "title": "Annotation URI",
                                      "description": "URI for Annotation",
                                      "format": "uri",
                                      "items": {
                                          "type": "string",
                                          "format": "uri"
                                      }
                                  }
                              }
                          }
                      },
                      "support": {
                          "type": [
                              "string",
                              "null"
                          ],
                          "title": "Summary Text",
                          "description": "Abstract from source text to provide support for this nanopub"
                      },
                      "references": {
                          "type": [
                              "object",
                              "null"
                          ],
                          "title": "References",
                          "description": "The references section identifies annotation and namespace URIs.",
                          "properties": {
                              "annotations": {
                                  "type": [
                                      "array",
                                      "null"
                                  ],
                                  "title": "Annotation references",
                                  "description": "References to annotation resources.",
                                  "item": {
                                      "type": "object",
                                      "properties": {
                                          "keyword": {
                                              "type": "string",
                                              "title": "Keyword",
                                              "description": "Keyword that identifies this annotation resource, but only in the context of this BEL Nanopub."
                                          },
                                          "uri": {
                                              "type": "string",
                                              "format": "uri",
                                              "title": "URI",
                                              "description": "URI that identifies this annotation resource."
                                          }
                                      },
                                      "required": [
                                          "keyword",
                                          "uri"
                                      ]
                                  }
                              },
                              "namespaces": {
                                  "type": [
                                      "array",
                                      "null"
                                  ],
                                  "title": "Namespace references",
                                  "description": "References to namespace resources.",
                                  "item": {
                                      "type": "object",
                                      "properties": {
                                          "keyword": {
                                              "type": "string",
                                              "title": "Keyword",
                                              "description": "Keyword that identifies this namespace resource, but only in the context of this BEL Nanopub."
                                          },
                                          "uri": {
                                              "type": "string",
                                              "format": "uri",
                                              "title": "URI",
                                              "description": "URI that identifies this namespace resource."
                                          }
                                      },
                                      "required": [
                                          "keyword",
                                          "uri"
                                      ]
                                  }
                              }
                          }
                      },
                      "metadata": {
                          "type": [
                              "array",
                              "null"
                          ],
                          "title": "BEL Nanopub resource metadata",
                          "description": "Metadata that describes the nanopub resource.",
                          "items": {
                              "oneOf": [
                                  {
                                      "type": "object",
                                      "required": [
                                          "name",
                                          "value"
                                      ],
                                      "properties": {
                                          "name": {
                                              "type": "string",
                                              "title": "Name",
                                              "description": "The name of this metadata property."
                                          },
                                          "value": {
                                              "type": [
                                                  "array",
                                                  "boolean",
                                                  "number",
                                                  "object",
                                                  "string"
                                              ],
                                              "title": "Value",
                                              "description": "The value of this metadata property.",
                                              "items": {
                                                  "type": [
                                                      "array",
                                                      "boolean",
                                                      "integer",
                                                      "number",
                                                      "null",
                                                      "object",
                                                      "string"
                                                  ]
                                              }
                                          }
                                      }
                                  },
                                  {
                                      "type": "object",
                                      "required": [
                                          "uri"
                                      ],
                                      "title": "Annotation URI(s)",
                                      "description": "URI(s) for Annotations",
                                      "properties": {
                                          "uri": {
                                              "type": [
                                                  "string",
                                                  "array"
                                              ],
                                              "format": "uri",
                                              "items": {
                                                  "type": "string",
                                                  "format": "uri"
                                              }
                                          }
                                      }
                                  }
                              ]
                          }
                      }
                  }
              }
          }
      }
  - annotation_resource: |-
      {
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "Annotation",
          "description": "A vocabulary of terms for describing nanopub resources.",
          "type": "object",
          "additionalProperties": false,
          "required": [
              "annotation"
          ],
          "properties": {
              "annotation": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                      "rdf_uri",
                      "name",
                      "prefix",
                      "domain"
                  ],
                  "properties": {
                      "rdf_uri": {
                          "type": "string"
                      },
                      "name": {
                          "type": "string"
                      },
                      "prefix": {
                          "type": "string"
                      },
                      "domain": {
                          "type": "string"
                      }
                  }
              }
          }
      }
  - nanopub_collection: |-
      {
          "$schema": "http://json-schema.org/draft-04/schema",
          "description": "DESCRIBE NANOPUB COLLECTION",
          "type": "object",
          "additionalProperties": false,
          "required": [
              "nanopub_collection",
              "facets"
          ],
          "properties": {
              "nanopub_collection": {
                  "type": "array",
                  "minItems": 0,
                  "title": "",
                  "description": "",
                  "items": {
                      "$ref": "nanopub_resource.schema.json"
                  }
              },
              "facets": {
                  "type": "array",
                  "minItems": 0,
                  "title": "",
                  "description": "",
                  "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                          "category",
                          "name",
                          "value",
                          "filter",
                          "count"
                      ],
                      "properties": {
                          "category": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          },
                          "value": {
                              "type": "string"
                          },
                          "filter": {
                              "type": "string"
                          },
                          "count": {
                              "type": "integer"
                          }
                      }
                  }
              },
              "metadata": {
                  "title": "Metadata",
                  "description": "Data about the nanopub collection",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                      "collection_paging": {
                          "type": "object",
                          "properties": {
                              "total": {
                                  "title": "Total",
                                  "description": "The total number of resources in this collection.",
                                  "type": "number",
                                  "minimum": 0
                              },
                              "total_filtered": {
                                  "title": "Total Filtered",
                                  "description": "The total number of resources in the filtered collection.",
                                  "type": "number",
                                  "minimum": 0
                              },
                              "total_pages": {
                                  "title": "Total Pages",
                                  "description": "The total number of pages (i.e. sized partitions) in the filtered collection.",
                                  "type": "number",
                                  "minimum": 0
                              },
                              "current_page": {
                                  "title": "Current Page",
                                  "description": "The current page of the filtered collection that this resource represents.",
                                  "type": "number",
                                  "minimum": 0
                              },
                              "current_page_size": {
                                  "title": "Current Page Size",
                                  "description": "The number of resources in the current page of the filtered collection.",
                                  "type": "number",
                                  "minimum": 0
                              }
                          }
                      }
                  }
              }
          }
      }
traits: []
